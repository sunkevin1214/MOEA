function create_pf( )
objs = [10, 15];
%minimum = 5000;
divs = [6, 5];

% for i = 1:numel(objs)
%     div = 1;
%     while nchoosek(objs(i)+div-1, div) < minimum
%         div = div + 1;
%     end
%     disp(['objs:', num2str(objs(i)), ', div:', num2str(div), ',count:', num2str(nchoosek(objs(i)+div-1, div))]);
% end

f = @dtlz6;
for i = 1:numel(objs)
    f(divs(i), objs(i));
end


end

function dtlz1(div, obj)
    pf = uniform_sample(obj, div);
    pf = pf./2;
    file_name = sprintf('dtlz1_tf_%dobjs.txt', obj);
    save(file_name, 'pf', '-ascii');
end

function dtlz2(div, obj)
    pf = uniform_sample(obj, div);
    pf = bsxfun(@rdivide, pf, sqrt(sum(pf.^2, 2)));
    file_name = sprintf('dtlz2_tf_%dobjs.txt', obj);
    save(file_name, 'pf', '-ascii');
end

function dtlz3(div, obj)
    pf = uniform_sample(obj, div);
    pf = bsxfun(@rdivide, pf, sqrt(sum(pf.^2, 2)));
    file_name = sprintf('dtlz3_tf_%dobjs.txt', obj);
    save(file_name, 'pf', '-ascii');
end

function dtlz4(div, obj)
    pf = uniform_sample(obj, div);
    pf = bsxfun(@rdivide, pf, sqrt(sum(pf.^2, 2)));
    file_name = sprintf('dtlz4_tf_%dobjs.txt', obj);
    save(file_name, 'pf', '-ascii');
end

function dtlz5(div, obj)
    pf = uniform_sample(obj, div);
    pf = bsxfun(@rdivide, pf, sqrt(sum(pf.^2, 2)));
    file_name = sprintf('dtlz5_tf_%dobjs.txt', obj);
    save(file_name, 'pf', '-ascii');
end

function dtlz6(div, obj)
    pf = uniform_sample(obj, div);
    pf = bsxfun(@rdivide, pf, sqrt(sum(pf.^2, 2)));
    file_name = sprintf('dtlz6_tf_%dobjs.txt', obj);
    save(file_name, 'pf', '-ascii');
end

function dtlz7(div, obj)
    % for dtlz, the samples are generated by ps
    % minimum = 5000; for 10 and 15, the divs should be 
    
    pf = uniform_sample(obj, div);
    pf = bsxfun(@rdivide, pf, sqrt(sum(pf.^2, 2)));
    file_name = sprintf('dtlz6_tf_%dobjs.txt', obj);
    save(file_name, 'pf', '-ascii');
end